// Generated by CoffeeScript 1.6.3
(function() {
  var Console, ConsoleWidget, Modal,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Modal = require('voxel-modal');

  ConsoleWidget = require('console-widget');

  module.exports = function(game, opts) {
    return new Console(game, opts);
  };

  Console = (function(_super) {
    __extends(Console, _super);

    function Console(game, opts) {
      var _base;
      this.game = game;
      this.opts = opts;
      if ((_base = this.opts).includeTextBindings == null) {
        _base.includeTextBindings = {
          'console': void 0,
          console2: '/',
          console3: '.'
        };
      }
      this.widget = ConsoleWidget(this.opts);
      this.bindKeys();
      Console.__super__.constructor.call(this, game, {
        element: this.widget.containerNode
      });
    }

    Console.prototype.bindKeys = function() {
      var _this = this;
      return ['console', 'console2', 'console3'].forEach(function(binding) {
        return _this.game.buttons.down.on(binding, function() {
          var initialText;
          initialText = _this.opts.includeTextBindings[binding];
          return _this.open(initialText);
        });
      });
    };

    Console.prototype.open = function(initialText) {
      if (initialText == null) {
        initialText = void 0;
      }
      Console.__super__.open.call(this);
      return this.widget.open(initialText);
    };

    Console.prototype.close = function() {
      Console.__super__.close.call(this);
      return this.widget.close();
    };

    Console.prototype.log = function(text) {
      return this.widget.log(text);
    };

    Console.prototype.logNode = function(node) {
      return this.widget.logNode(node);
    };

    return Console;

  })(Modal);

}).call(this);
